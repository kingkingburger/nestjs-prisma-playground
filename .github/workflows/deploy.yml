# Workflow의 이름
name: Deploy To EC2

# Event: 실행되는 시점
on:
  push:
    branches:
      - master

jobs:

  # job 식별
  Deploy:

    # ubuntu 환경 / 가장 최신 버전(latest)
    runs-on: ubuntu-latest

    # step: 특정 작업을 수행하는 가장 작은 단위 (linux 명령어)
    steps:

      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Node 설치
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'pnpm'

      - name: 의존성(라이브러리) 설치
        run: pnpm i

      - name: .env 파일 만들기
        run: echo '${{ secrets.ENV }}' >> .env

      - name: prisma setting
        run: pnpm prisma generate

      - name: 테스트 코드 실행
        run: npm run test


      - name: 빌드
        run: |
          
          npm run build

      - name: 압축하기
        run: tar -czvf project.tar.gz dist .env package.json pnpm-lock.yaml

      - name: SCP로 EC2에 빌드된 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: project.tar.gz
          target: /home/ubuntu/playground-server/tobe

      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3 # 라이브러리
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: false # 아래 script 중 실패하는 명령이 하나라도 있으면 실패로 처리
          script: |
            rm -rf /home/ubuntu/playground-server/current
            mkdir /home/ubuntu/playground-server/current
            mv /home/ubuntu/playground-server/tobe/project.tar.gz /home/ubuntu/playground-server/current/project.tar.gz
            cd /home/ubuntu/playground-server/current
            
            tar -xvf project.tar.gz

            npm i
            
            pm2 kill
            pm2 start dist/main.js --name "backend-server"